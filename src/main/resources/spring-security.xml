<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security/oauth2
        http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">
    <http pattern="/user/login" security="none"/>
    <http pattern="/resources/**" security="none"/>
    <http pattern="/user/register" security="none"/>
    <http pattern="/index" security="none"/>
    <!--请求地址-->
    <http pattern="/oauth/token" create-session="stateless"
          authentication-manager-ref="oauth2AuthenticationManager" use-expressions="false">
        <intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
        <csrf disabled="true"/>
        <anonymous enabled="false" />
        <http-basic entry-point-ref="oauth2AuthenticationEntryPoint" />
        <custom-filter ref="clientCredentialsTokenEndpointFilter"
                       before="BASIC_AUTH_FILTER" />
        <access-denied-handler ref="oauth2AccessDeniedHandler" />
    </http>


    <!--<http pattern="/api/**" create-session="never"-->
          <!--entry-point-ref="oauth2AuthenticationEntryPoint" access-decision-manager-ref="oauth2AccessDecisionManager">-->
        <!--<anonymous enabled="false"/>-->
        <!--<intercept-url pattern="/api/token" access="IS_AUTHENTICATED_FULLY"/>-->
        <!--<custom-filter ref="mobileResourceServer" before="BASIC_AUTH_FILTER"/>-->
        <!--<access-denied-handler ref="oauth2AccessDeniedHandler"/>-->
    <!--</http>-->
    <http pattern="/api/**" create-session="never"
          entry-point-ref="oauth2AuthenticationEntryPoint"
          access-decision-manager-ref="oauth2AccessDecisionManager" use-expressions="false">
        <anonymous enabled="false" />
        <intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN"/>
        <custom-filter ref="mobileResourceServer" before="PRE_AUTH_FILTER" />
        <access-denied-handler ref="oauth2AccessDeniedHandler" />
    </http>

    <http>
        <csrf disabled="true"/>
        <intercept-url pattern="/user/dispatcher" access="permitAll"/>
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/**" access="hasAnyRole('ADMIN','USER')"/>
        <form-login login-page="/user/login" login-processing-url="/login" default-target-url="/user/dispatcher"
                    always-use-default-target="true"/>
        <session-management>
            <concurrency-control max-sessions="1"/>
        </session-management>
        <logout logout-success-url="/"/>
    </http>



    <beans:bean id="tokenStore"
                class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />

    <beans:bean id="tokenStoreInRedis" class="org.springframework.security.oauth2.provider.token.store.redis.RedisTokenStore">

    </beans:bean>
    <beans:bean id="tokenServices"
                class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <beans:property name="tokenStore" ref="tokenStore" />
        <beans:property name="supportRefreshToken" value="true" />
    </beans:bean>

    <beans:bean id="oauth2AuthenticationEntryPoint"
                class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>
    <beans:bean id="oauth2AccessDeniedHandler"
                class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>
    <beans:bean id="oauthUserApprovalHandler"
                class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler"/>

    <beans:bean id="oauth2AccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>


    <oauth2:authorization-server
            client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
            user-approval-handler-ref="oauthUserApprovalHandler">
        <oauth2:authorization-code />
        <oauth2:implicit />
        <oauth2:refresh-token />
        <oauth2:client-credentials />
        <oauth2:password />
    </oauth2:authorization-server>

    <beans:bean id="clientCredentialsTokenEndpointFilter"
                class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <beans:property name="authenticationManager" ref="oauth2AuthenticationManager"/>
    </beans:bean>

    <oauth2:resource-server id="mobileResourceServer"
                            resource-id="mobile-resource" token-services-ref="tokenServices" />

    <beans:bean id="oauth2ClientDetailsUserService"
                class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <beans:constructor-arg ref="clientDetailsService"/>
    </beans:bean>

    <oauth2:client-details-service id="clientDetailsService">
        <oauth2:client client-id="mobile_1"
                       authorized-grant-types="password,authorization_code,refresh_token,implicit"
                       secret="secret_1" scope="read,write,trust" />
    </oauth2:client-details-service>

    <authentication-manager id="oauth2AuthenticationManager">
        <authentication-provider user-service-ref="oauth2ClientDetailsUserService"/>
    </authentication-manager>



    <beans:bean name="userService" class="com.bay1ts.service.impl.UserService"/>

    <authentication-manager>
        <authentication-provider user-service-ref="userService"/>
    </authentication-manager>
</beans:beans>